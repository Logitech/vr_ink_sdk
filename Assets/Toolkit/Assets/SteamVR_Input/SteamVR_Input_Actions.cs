// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_logitechToolkit_PrimaryClick;
        
        private static SteamVR_Action_Boolean p_logitechToolkit_TipClick;
        
        private static SteamVR_Action_Boolean p_logitechToolkit_GripClick;
        
        private static SteamVR_Action_Boolean p_logitechToolkit_MenuClick;
        
        private static SteamVR_Action_Boolean p_logitechToolkit_TrackpadTouch;
        
        private static SteamVR_Action_Boolean p_logitechToolkit_TrackpadClick;
        
        private static SteamVR_Action_Vector2 p_logitechToolkit_TrackpadValue;
        
        private static SteamVR_Action_Single p_logitechToolkit_PrimaryPressure;
        
        private static SteamVR_Action_Single p_logitechToolkit_TipPressure;
        
        private static SteamVR_Action_Single p_logitechToolkit_GripPressure;
        
        private static SteamVR_Action_Pose p_logitechToolkit_Pose;
        
        private static SteamVR_Action_Vibration p_logitechToolkit_Haptics;
        
        public static SteamVR_Action_Boolean logitechToolkit_PrimaryClick
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_PrimaryClick.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean logitechToolkit_TipClick
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_TipClick.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean logitechToolkit_GripClick
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_GripClick.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean logitechToolkit_MenuClick
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_MenuClick.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean logitechToolkit_TrackpadTouch
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_TrackpadTouch.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean logitechToolkit_TrackpadClick
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_TrackpadClick.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 logitechToolkit_TrackpadValue
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_TrackpadValue.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single logitechToolkit_PrimaryPressure
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_PrimaryPressure.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single logitechToolkit_TipPressure
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_TipPressure.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single logitechToolkit_GripPressure
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_GripPressure.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Pose logitechToolkit_Pose
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_Pose.GetCopy <SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vibration logitechToolkit_Haptics
        {
            get
            {
                return SteamVR_Actions.p_logitechToolkit_Haptics.GetCopy <SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[]
            {
                    SteamVR_Actions.logitechToolkit_PrimaryClick,
                    SteamVR_Actions.logitechToolkit_TipClick,
                    SteamVR_Actions.logitechToolkit_GripClick,
                    SteamVR_Actions.logitechToolkit_MenuClick,
                    SteamVR_Actions.logitechToolkit_TrackpadTouch,
                    SteamVR_Actions.logitechToolkit_TrackpadClick,
                    SteamVR_Actions.logitechToolkit_TrackpadValue,
                    SteamVR_Actions.logitechToolkit_PrimaryPressure,
                    SteamVR_Actions.logitechToolkit_TipPressure,
                    SteamVR_Actions.logitechToolkit_GripPressure,
                    SteamVR_Actions.logitechToolkit_Pose,
                    SteamVR_Actions.logitechToolkit_Haptics};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.logitechToolkit_PrimaryClick,
                    SteamVR_Actions.logitechToolkit_TipClick,
                    SteamVR_Actions.logitechToolkit_GripClick,
                    SteamVR_Actions.logitechToolkit_MenuClick,
                    SteamVR_Actions.logitechToolkit_TrackpadTouch,
                    SteamVR_Actions.logitechToolkit_TrackpadClick,
                    SteamVR_Actions.logitechToolkit_TrackpadValue,
                    SteamVR_Actions.logitechToolkit_PrimaryPressure,
                    SteamVR_Actions.logitechToolkit_TipPressure,
                    SteamVR_Actions.logitechToolkit_GripPressure,
                    SteamVR_Actions.logitechToolkit_Pose};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[]
            {
                    SteamVR_Actions.logitechToolkit_Haptics};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[]
            {
                    SteamVR_Actions.logitechToolkit_Haptics};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[]
            {
                    SteamVR_Actions.logitechToolkit_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[]
            {
                    SteamVR_Actions.logitechToolkit_PrimaryClick,
                    SteamVR_Actions.logitechToolkit_TipClick,
                    SteamVR_Actions.logitechToolkit_GripClick,
                    SteamVR_Actions.logitechToolkit_MenuClick,
                    SteamVR_Actions.logitechToolkit_TrackpadTouch,
                    SteamVR_Actions.logitechToolkit_TrackpadClick};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[]
            {
                    SteamVR_Actions.logitechToolkit_PrimaryPressure,
                    SteamVR_Actions.logitechToolkit_TipPressure,
                    SteamVR_Actions.logitechToolkit_GripPressure};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[]
            {
                    SteamVR_Actions.logitechToolkit_TrackpadValue};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.logitechToolkit_PrimaryClick,
                    SteamVR_Actions.logitechToolkit_TipClick,
                    SteamVR_Actions.logitechToolkit_GripClick,
                    SteamVR_Actions.logitechToolkit_MenuClick,
                    SteamVR_Actions.logitechToolkit_TrackpadTouch,
                    SteamVR_Actions.logitechToolkit_TrackpadClick,
                    SteamVR_Actions.logitechToolkit_TrackpadValue,
                    SteamVR_Actions.logitechToolkit_PrimaryPressure,
                    SteamVR_Actions.logitechToolkit_TipPressure,
                    SteamVR_Actions.logitechToolkit_GripPressure};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_logitechToolkit_PrimaryClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/LogitechToolkit/in/PrimaryClick")));
            SteamVR_Actions.p_logitechToolkit_TipClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/LogitechToolkit/in/TipClick")));
            SteamVR_Actions.p_logitechToolkit_GripClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/LogitechToolkit/in/GripClick")));
            SteamVR_Actions.p_logitechToolkit_MenuClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/LogitechToolkit/in/MenuClick")));
            SteamVR_Actions.p_logitechToolkit_TrackpadTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/LogitechToolkit/in/TrackpadTouch")));
            SteamVR_Actions.p_logitechToolkit_TrackpadClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/LogitechToolkit/in/TrackpadClick")));
            SteamVR_Actions.p_logitechToolkit_TrackpadValue = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/LogitechToolkit/in/TrackpadValue")));
            SteamVR_Actions.p_logitechToolkit_PrimaryPressure = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/LogitechToolkit/in/PrimaryPressure")));
            SteamVR_Actions.p_logitechToolkit_TipPressure = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/LogitechToolkit/in/TipPressure")));
            SteamVR_Actions.p_logitechToolkit_GripPressure = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/LogitechToolkit/in/GripPressure")));
            SteamVR_Actions.p_logitechToolkit_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create <SteamVR_Action_Pose>("/actions/LogitechToolkit/in/Pose")));
            SteamVR_Actions.p_logitechToolkit_Haptics = ((SteamVR_Action_Vibration)(SteamVR_Action.Create <SteamVR_Action_Vibration>("/actions/LogitechToolkit/out/Haptics")));
        }
    }
}
